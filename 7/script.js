'use strict';
// Задача о коллекции функций: у вас есть массив функций, напишите код, который вызовет каждую функцию в этом массиве и выведет их порядковый номер. Однако, вызов каждой функции должен происходить только после вызова предыдущей функции.
// Другими словами, нужно выполнить следующие шаги:
// Вызвать первую функцию из массива.
// После завершения работы первой функции вызвать вторую функцию.
// После завершения работы второй функции вызвать третью функцию.
// И так далее, пока все функции в массиве не будут вызваны по порядку.

// Массив функций
const functionsArray = [
    () => {
        // стрелочная фуннкция возвращает промис, который используется для управления асинхронными задачами
        return new Promise((resolve) => {
            setTimeout(() => {
                console.log('Функция 1');
                resolve();
                // resolve вызывается здесь,чтобы исполнение кода пошло дальше(разрешаем промис)
            }, 1000); 
        });
    },
    () => {
        return new Promise((resolve) => {
            setTimeout(() => {
                console.log('Функция 2');
                resolve();
            }, 1000); 
        });
    },
    () => {
        return new Promise((resolve) => {
            setTimeout(() => {
                console.log('Функция 3');
                resolve();
            }, 1000); 
        });
    },
];
// Обьявляем асинхронную функцию
async function executeFunctionsSequentially() {
    for (let i = 0; i < functionsArray.length; i++) {
        // await используется для того, чтобы функции запускались последовательно
        await functionsArray[i]();
        console.log(`Номер функции в массие: ${i}`);
    }
}

// Вызываем функцию, которая запустит функции последовательно
executeFunctionsSequentially()

